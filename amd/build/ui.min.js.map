{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny stash UI.\n *\n * @module      tiny_stash/ui\n * @copyright   2023 Adrian Greeve <adriangreeve.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {getContextId} from 'editor_tiny/options';\nimport {getCourseId} from 'tiny_stash/options';\nimport $ from 'jquery';\nimport * as DropAdd from 'tiny_stash/drop-add';\nimport * as AddItem from 'tiny_stash/additem';\nimport * as AddTrade from 'tiny_stash/addtrade';\nimport SnippetMaker from 'tiny_stash/local/classes/snippetmaker';\nimport * as WebService from 'tiny_stash/webservice-calls';\nimport {get_string as getString} from 'core/str';\n\nlet itemsData = {};\nlet Snippet = {};\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\nexport const handleInit = editor => async () => {\n    let courseid = getCourseId(editor);\n    let context = getContextId(editor);\n    let itemdata = await getItemData(courseid);\n    const secrettoid = (await getDropData(context)).items.reduce((c, v) => ({...c, [v.hashcode]: v.id}), {});\n\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n\n    // Mildly obscure code warning. Normally when you use a regex to split\n    // a string, the match itself is not included in the resulting array.\n    //\n    // From MDN docs:\n    //     When found, separator is removed from the string, and the\n    //     substrings are returned in an array.\n    //\n    // By adding the ( ) around the pattern, the match itself is not included\n    // but the capture group (which is the entire matched string) is spliced\n    // in to the array.\n    //\n    // From MDN docs:\n    //     If separator is a regular expression with capturing groups, then\n    //     each time separator matches, the captured groups (including any\n    //     undefined results) are spliced into the output array. This\n    //     behavior is specified by the regexp's Symbol.split method.\n    const regex = /(<p>\\[stashdrop[^\\]]*\\]<\\/p>|\\[stashdrop[^\\]]*\\])/;\n    const promises = editor.getContent().split(regex).map(segment => {\n        const trimmed = segment.replace(/^<p>|<\\/p>$/g, '');\n        if (trimmed.slice(0, 10) === '[stashdrop' && trimmed.slice(-1) === ']') {\n            const data = trimmed.matchAll(/(\\w+)(?:=?\"([^\"]*)\")?/g).reduce((c, v) => {\n                return {...c, ...{[v[1]]: v[2] ?? true}};\n            }, {});\n\n            const templatedata = {\n                ...data,\n                ...(data.image ? {image: itemsData[secrettoid[data.secret]].imageurl} : {}),\n                shortcode: trimmed\n            };\n\n            return Templates.renderForPromise('tiny_stash/item-preview', templatedata).then(preview => preview.html);\n        }\n\n        return Promise.resolve(segment);\n    });\n\n    Promise.all(promises).then(rendered => {\n        editor.setContent(rendered.join(''));\n    });\n};\n\n/**\n * Display the drop dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let contextid = getContextId(editor);\n    let data = await getDropData(contextid);\n    let courseid = getCourseId(editor);\n    let itemdata = await getItemData(courseid);\n    if (itemdata.items) {\n        itemdata.items.forEach((item) => {\n            itemsData[item.id] = item;\n        });\n    }\n    // window.console.log(data);\n\n    const modalPromises = await ModalFactory.create({\n        title: getString('modalheading', 'tiny_stash'),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Templates.render('tiny_stash/drop-code-selector', data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.bodyRendered, () => {\n        addDropListener(editor);\n\n        // Add a listener for the appearance select box.\n        addAppearanceListener();\n        addTextAndImageListener();\n\n        let additembuttons = document.querySelectorAll('.tiny-stash-add-item');\n        for (let additembutton of additembuttons) {\n            additembutton.addEventListener('click', (e) => {\n                e.preventDefault();\n                $('.carousel').carousel('next');\n                $('.carousel').carousel('pause');\n                AddItem.init(editor);\n            });\n        }\n\n        document.querySelector('.tiny-stash-add-trade').addEventListener('click', (e) => {\n            e.preventDefault();\n            $('.carousel').carousel(3);\n            $('.carousel').carousel('pause');\n            AddTrade.init(editor);\n        });\n\n        $('.carousel').on('slide.bs.carousel', async () => {\n            if (DropAdd.getStatus() == 'Saved') {\n                // window.console.log(DropAdd.SavedIndex);\n                // Reload the drop list.\n                data = await getDropData(contextid);\n                Templates.render('tiny_stash/drop-select', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-drop-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-item-select');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == DropAdd.SavedIndex) {\n                            option.selected = true;\n                            setPreview(option.dataset.id, option.dataset.hash);\n                        }\n                    }\n                    addDropListener(editor);\n                });\n                DropAdd.setStatus('Clear');\n            }\n            if (AddItem.getStatus() == 'Saved') {\n                // Reload the drop list.\n                itemsData = {};\n                itemdata = await getItemData(courseid);\n                itemdata.items.forEach((item) => {\n                    itemsData[item.id] = item;\n                });\n                AddItem.setStatus('Clear');\n            }\n\n            if (AddTrade.getStatus() == 'Saved') {\n                // Reload the trade select element.\n                data = await getDropData(contextid);\n                window.console.log(data);\n                Templates.render('tiny_stash/local/selectors/trade-drop-selector', data).then((html, js) => {\n                    let selectnode = document.querySelector('.tiny-stash-trade-select');\n                    Templates.replaceNodeContents(selectnode, html, js);\n                    let selectitemnode = document.querySelector('.tiny-stash-trade-selector');\n                    for (let i=0; i< selectitemnode.options.length; i++) {\n                        let option = selectitemnode.options[i];\n                        if (option.dataset.hash == AddTrade.TradeHash) {\n                            option.selected = true;\n                            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n                            let dropcode = \"[stashtrade secret=\\\"\" + option.dataset.hash + \"\\\"]\";\n                            codearea[0].innerText = dropcode;\n                        }\n                    }\n                });\n                AddTrade.setStatus('ready');\n            }\n        });\n    });\n\n    $root.on(ModalEvents.save, () => {\n        let activetab = document.querySelector('[aria-selected=\"true\"][data-tiny-stash]');\n        let codearea = '';\n        let appearance = document.querySelector('.tiny-stash-appearance').value;\n        if (activetab.getAttribute('aria-controls') == 'items') {\n            codearea = document.getElementsByClassName('tiny-stash-item-code');\n        } else {\n            codearea = document.getElementsByClassName('tiny-stash-trade-code');\n        }\n\n        if (appearance !== \"text\") {\n            const previewnode = document.querySelector('.preview .block-stash-item').cloneNode(true);\n            const shortcodediv = document.createElement('div');\n            shortcodediv.classList.add(\"tiny-stash-shortcode\");\n            shortcodediv.innerHTML = codearea[0].innerText;\n            shortcodediv.style.display = \"none\";\n            previewnode.appendChild(shortcodediv);\n            previewnode.setAttribute('contenteditable', false);\n\n            editor.execCommand('mceInsertContent', false, previewnode.outerHTML.replace(/&quot;/g, \"'\"));\n        } else {\n            editor.execCommand('mceInsertContent', false, codearea[0].innerText);\n        }\n    });\n\n    root.addEventListener('click', (event) => {\n        let element = event.target;\n        let elementtype = element.dataset.type;\n        if (element.nodeName === \"OPTION\" && elementtype == 'item') {\n            setPreview(element.dataset.id, element.dataset.hash);\n        }\n        if (element.nodeName === \"OPTION\" && elementtype == 'trade') {\n            let codearea = document.getElementsByClassName('tiny-stash-trade-code');\n            let dropcode = \"[stashtrade secret=\\\"\" + element.dataset.hash + \"\\\"]\";\n            codearea[0].innerText = dropcode;\n        }\n    });\n};\n\nconst addDropListener = (editor) => {\n    let temp = document.getElementsByClassName('tiny-stash-add-drop');\n    temp[0].addEventListener('click', (e) => {\n        e.preventDefault();\n        $('.carousel').carousel(2);\n        $('.carousel').carousel('pause');\n        // init drop add page.\n        DropAdd.init(itemsData, editor);\n    });\n};\n\nconst addAppearanceListener = () => {\n    let selectnode = document.querySelector('.tiny-stash-appearance');\n    selectnode.addEventListener('change', (e) => {\n        let selectedelement = e.target.selectedOptions[0];\n        if (selectedelement.value == 'text') {\n            document.querySelector('.snippet-label').classList.remove('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'image') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.add('d-none');\n        }\n        if (selectedelement.value == 'imageandbutton') {\n            document.querySelector('.snippet-label').classList.add('d-none');\n            document.querySelector('.snippet-actiontext').classList.remove('d-none');\n        }\n        let itemid = document.querySelector('.tiny-stash-item-select').selectedOptions[0].dataset.id;\n        setPreview(itemid, selectedelement.value);\n    });\n};\n\nconst addTextAndImageListener = () => {\n    let textnode = document.querySelector('input[name=\"actiontext\"]');\n\n    textnode.addEventListener('keyup', (e) => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let buttontext = e.currentTarget.value;\n        let previewbutton = document.querySelector('.tiny-stash-button-preview');\n        previewbutton.innerText = buttontext;\n        // Update the snippet text.\n        let codearea = document.getElementsByClassName('tiny-stash-item-code');\n        Snippet.setText(buttontext);\n        codearea[0].innerText = Snippet.getImageAndText();\n    });\n\n    let labelnode = document.querySelector('input[name=\"label\"]');\n\n    labelnode.addEventListener('keyup', () => {\n        // if no preview exit early.\n        if (!document.querySelector('.block-stash-item')) {\n            return;\n        }\n        let itemnode = document.querySelector('.tiny-stash-item-select');\n        setPreview(itemnode.selectedOptions[0].dataset.id, itemnode.selectedOptions[0].dataset.hash);\n    });\n\n};\n\nconst setPreview = (itemid, hashcode) => {\n    // Check the appearance to determine what to display and update.\n    let appearanceselector = document.querySelector('.tiny-stash-appearance');\n    let codearea = document.getElementsByClassName('tiny-stash-item-code');\n    let buttontext = '';\n    if (appearanceselector.value === 'text') {\n        buttontext = document.querySelector('input[name=\"label\"]').value;\n    } else {\n        buttontext = document.querySelector('input[name=\"actiontext\"]').value;\n    }\n    Snippet = new SnippetMaker(hashcode, itemsData[itemid].name);\n    Snippet.setText(buttontext);\n\n    updatePreview(itemid, appearanceselector.value);\n    if (appearanceselector.value === 'imageandbutton') {\n        codearea[0].innerText = Snippet.getImageAndText();\n    } else if (appearanceselector.value === 'image') {\n        codearea[0].innerText = Snippet.getImage();\n    } else {\n        codearea[0].innerText = Snippet.getText();\n    }\n\n};\n\n/**\n * Update the preview image.\n *\n * @param {int} itemid\n * @param {string} previewtype\n */\nconst updatePreview = (itemid, previewtype) => {\n    let previewnode = document.querySelector('.preview');\n    previewnode.children.forEach((child) => { previewnode.removeChild(child); });\n\n    let wrappingdiv = document.createElement('div');\n    wrappingdiv.classList.add('block-stash-item');\n\n    if (previewtype === 'text') {\n        let textanchour = document.createElement('a');\n        textanchour.setAttribute('href', '#');\n        textanchour.innerText = document.querySelector('input[name=\"label\"]').value;\n        wrappingdiv.appendChild(textanchour);\n    } else {\n        // Image and text\n        let imagediv = document.createElement('div');\n        imagediv.classList.add('item-image');\n        imagediv.style.backgroundImage = 'url(' + itemsData[itemid].imageurl + ')';\n        if (previewtype === 'imageandbutton') {\n            let buttondiv = document.createElement('div');\n            buttondiv.classList.add('item-action');\n            let button = document.createElement('button');\n            button.classList.add('btn', 'btn-secondary', 'tiny-stash-button-preview');\n            button.setAttribute('disabled', true);\n            let temp = document.querySelector('input[name=\"actiontext\"]');\n            button.innerHTML = temp.value;\n            buttondiv.appendChild(button);\n            wrappingdiv.appendChild(imagediv);\n            wrappingdiv.appendChild(buttondiv);\n        } else {\n            wrappingdiv.appendChild(imagediv);\n        }\n    }\n    previewnode.appendChild(wrappingdiv);\n};\n\nconst getDropData = async (contextid) => {\n    try {\n        let temp = await WebService.getAllDropData(contextid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n\nconst getItemData = async (courseid) => {\n    try {\n        let temp = await WebService.getAllItemData(courseid);\n        return temp;\n    } catch (e) {\n        return {};\n    }\n};\n"],"names":["itemsData","Snippet","editor","displayDialogue","async","courseid","context","itemdata","getItemData","secrettoid","getDropData","items","reduce","c","v","hashcode","id","forEach","item","promises","getContent","split","map","segment","trimmed","replace","slice","data","matchAll","templatedata","image","secret","imageurl","shortcode","Templates","renderForPromise","then","preview","html","Promise","resolve","all","rendered","setContent","join","contextid","modalPromises","ModalFactory","create","title","type","types","SAVE_CANCEL","body","render","large","show","$root","getRoot","root","on","ModalEvents","hidden","destroy","bodyRendered","addDropListener","addAppearanceListener","addTextAndImageListener","additembuttons","document","querySelectorAll","additembutton","addEventListener","e","preventDefault","carousel","AddItem","init","querySelector","AddTrade","DropAdd","getStatus","js","selectnode","replaceNodeContents","selectitemnode","i","options","length","option","dataset","hash","SavedIndex","selected","setPreview","setStatus","window","console","log","TradeHash","codearea","getElementsByClassName","dropcode","innerText","save","activetab","appearance","value","getAttribute","previewnode","cloneNode","shortcodediv","createElement","classList","add","innerHTML","style","display","appendChild","setAttribute","execCommand","outerHTML","event","element","target","elementtype","nodeName","selectedelement","selectedOptions","remove","itemid","buttontext","currentTarget","setText","getImageAndText","itemnode","appearanceselector","SnippetMaker","name","updatePreview","getImage","getText","previewtype","children","child","removeChild","wrappingdiv","textanchour","imagediv","backgroundImage","buttondiv","button","temp","WebService","getAllDropData","getAllItemData"],"mappings":"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"}